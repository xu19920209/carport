<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--扫描注解包 配置这条便可移除 <context:annotation-config/> -->
    <!-- 启用MVC注解 -->
    <mvc:annotation-driven/>
    <!-- 将 springSwaggerConfig加载到spring容器 -->
    <!--<context:annotation-config/>-->
    <context:component-scan base-package="com.tuyue"/>
    <!--对静态资源文件的访问-->
    <mvc:resources mapping="/config/**" location="/config/"/>
    <mvc:resources mapping="/pic/**" location="/pic/"/>
    <mvc:resources mapping="/json/**" location="/json/"/>


    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="features">
                    <list>
                        <!--&lt;!&ndash; 输出key时是否使用双引号 &ndash;&gt;-->
                        <value>QuoteFieldNames</value>
                        <!--&lt;!&ndash; 是否输出值为null的字段 &ndash;&gt;-->
                        <value>WriteMapNullValue</value>
                        <!--&lt;!&ndash; List字段如果为null,输出为[],而非null &ndash;&gt;-->
                        <value>WriteNullListAsEmpty</value>
                        <!--&lt;!&ndash; 字符类型字段如果为null,输出为”“,而非null &ndash;&gt;-->
                        <value>WriteNullStringAsEmpty</value>
                        <!-- 字符类型字段如果为null,输出为”“,而非null -->
                        <value>WriteNullNumberAsZero</value>
                    </list>
                </property>
                <property name="charset" value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--MVC注解-->
    <!--针对注解配置@RequestMapping :
    RequestMappingHandlerMapping 替代了 DefaultAnnotationHandlerMapping-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping "/>

    <!--视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容。-->
    <mvc:default-servlet-handler/>

    <!--&lt;!&ndash; 用于将对象转换为 JSON  转换器&ndash;&gt;-->
    <bean id="stringConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--RequestMappingHandlerAdapter :
        和上面的RequestMappingHandlerMapping配对使用-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter ">
        <property name="messageConverters">
            <list>
                <ref bean="stringConverter"/>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>
    <!-- 允许跨域 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.tuyue.aspect.CommonInterceptor">
                <property name="excludedUrls">
                    <list>
                        <value>/</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- 上传拦截，如最大上传值及最小上传值 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!-- maven项目请求不到 注解方式uri -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="order" value="0"/>
    </bean>

    <!-- 配置基于schema的切面 aspect注解生效 -->
    <aop:aspectj-autoproxy/>
</beans>